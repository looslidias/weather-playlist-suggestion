server:
  port: 8090

weather:
  open-weather:
    city-base-url: http://api.openweathermap.org/data/2.5/weather?q=${city},${countryCode}&APPID=${appId}&units=imperial
    lat-long-base-url: http://api.openweathermap.org/data/2.5/weather?lat=${lat}&lon=${lon}&APPID=${appId}&units=imperial
    app-key: a57afda6e2e8c5393857e97345b3d0f0

playlist:
  spotify:
    search-genre-track-url: https://api.spotify.com/v1/search?q=${genre}&type=track&limit=${limit}
    search-genre-track-limit: 20
    app-key: asdasdasd

suggestion:
  genre-rules-file: drools/genres_rules.drl

queue:
  activemq:
    broker-url: tcp://activemq:61616
    user:
    password:
    playlist-city-suggestion-queue: suggestion-city-queue
    playlist-lat-long-suggestion-queue: suggestion-latlong-queue

spring:
  datasource:
    password: postgres
    username: postgres
    platform: postgres
    url: jdbc:postgresql://postgis:5432/postgres
  jpa:
    database: POSTGRESQL
    hibernate:
      ddl-auto: update
    show-sql: true
  cache.type: redis
  redis:
    host: redis
    port: 6379
    cache-null-values: false
    time-to-live: 60000